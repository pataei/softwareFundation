DIGEST 28dc21b149136470fd1cadf607037607
FTactics
R662:665 Poly <> <> lib
prf 941:946 <> silly1
R968:970 Coq.Init.Datatypes <> nat ind
R1021:1023 Coq.Init.Logic <> :type_scope:x_'='_x not
R1016:1016 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1018:1018 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1020:1020 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1019:1019 Tactics <> o var
R1017:1017 Tactics <> n var
R1024:1024 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1026:1026 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1028:1028 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1027:1027 Tactics <> p var
R1025:1025 Tactics <> m var
R999:1001 Coq.Init.Logic <> :type_scope:x_'='_x not
R994:994 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R996:996 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R998:998 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R997:997 Tactics <> o var
R995:995 Tactics <> n var
R1002:1002 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1004:1004 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1006:1006 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1005:1005 Tactics <> p var
R1003:1003 Tactics <> n var
R980:982 Coq.Init.Logic <> :type_scope:x_'='_x not
R979:979 Tactics <> n var
R983:983 Tactics <> m var
prf 1552:1557 <> silly2
R1579:1581 Coq.Init.Datatypes <> nat ind
R1663:1665 Coq.Init.Logic <> :type_scope:x_'='_x not
R1658:1658 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1660:1660 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1662:1662 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1661:1661 Tactics <> o var
R1659:1659 Tactics <> n var
R1666:1666 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1668:1668 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1670:1670 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1669:1669 Tactics <> p var
R1667:1667 Tactics <> m var
R1620:1622 Coq.Init.Datatypes <> nat ind
R1640:1642 Coq.Init.Logic <> :type_scope:x_'='_x not
R1635:1635 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1637:1637 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1639:1639 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1638:1638 Tactics <> o var
R1636:1636 Tactics <> q var
R1643:1643 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1645:1645 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1647:1647 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1646:1646 Tactics <> p var
R1644:1644 Tactics <> r var
R1627:1629 Coq.Init.Logic <> :type_scope:x_'='_x not
R1626:1626 Tactics <> q var
R1630:1630 Tactics <> r var
R1591:1593 Coq.Init.Logic <> :type_scope:x_'='_x not
R1590:1590 Tactics <> n var
R1594:1594 Tactics <> m var
prf 2181:2187 <> silly2a
R2205:2207 Coq.Init.Datatypes <> nat ind
R2299:2301 Coq.Init.Logic <> :type_scope:x_'='_x not
R2296:2296 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2298:2298 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2297:2297 Tactics <> n var
R2302:2302 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2304:2304 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2303:2303 Tactics <> m var
R2254:2256 Coq.Init.Datatypes <> nat ind
R2280:2282 Coq.Init.Logic <> :type_scope:x_'='_x not
R2277:2277 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2279:2279 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2278:2278 Tactics <> q var
R2283:2283 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2285:2285 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2284:2284 Tactics <> r var
R2265:2267 Coq.Init.Logic <> :type_scope:x_'='_x not
R2260:2260 Poly <> ::'('_x_','_x_')' not
R2262:2262 Poly <> ::'('_x_','_x_')' not
R2264:2264 Poly <> ::'('_x_','_x_')' not
R2261:2261 Tactics <> q var
R2263:2263 Tactics <> q var
R2268:2268 Poly <> ::'('_x_','_x_')' not
R2270:2270 Poly <> ::'('_x_','_x_')' not
R2272:2272 Poly <> ::'('_x_','_x_')' not
R2269:2269 Tactics <> r var
R2271:2271 Tactics <> r var
R2221:2223 Coq.Init.Logic <> :type_scope:x_'='_x not
R2216:2216 Poly <> ::'('_x_','_x_')' not
R2218:2218 Poly <> ::'('_x_','_x_')' not
R2220:2220 Poly <> ::'('_x_','_x_')' not
R2217:2217 Tactics <> n var
R2219:2219 Tactics <> n var
R2224:2224 Poly <> ::'('_x_','_x_')' not
R2226:2226 Poly <> ::'('_x_','_x_')' not
R2228:2228 Poly <> ::'('_x_','_x_')' not
R2225:2225 Tactics <> m var
R2227:2227 Tactics <> m var
prf 2487:2494 <> silly_ex
R2588:2590 Coq.Init.Logic <> :type_scope:x_'='_x not
R2582:2585 Basics <> oddb def
R2591:2594 Basics <> true constr
R2566:2568 Coq.Init.Logic <> :type_scope:x_'='_x not
R2559:2563 Basics <> evenb def
R2569:2572 Basics <> true constr
R2542:2544 Coq.Init.Logic <> :type_scope:x_'='_x not
R2532:2535 Basics <> oddb def
R2538:2538 Coq.Init.Datatypes <> S constr
R2540:2540 Tactics <> n var
R2545:2548 Basics <> true constr
R2521:2523 Coq.Init.Logic <> :type_scope:x_'='_x not
R2514:2518 Basics <> evenb def
R2520:2520 Tactics <> n var
R2524:2527 Basics <> true constr
prf 2867:2881 <> silly3_firsttry
R2897:2899 Coq.Init.Datatypes <> nat ind
R2955:2957 Coq.Init.Logic <> :type_scope:x_'='_x not
R2936:2942 Basics <> beq_nat def
R2945:2945 Coq.Init.Datatypes <> S constr
R2948:2948 Coq.Init.Datatypes <> S constr
R2950:2950 Tactics <> n var
R2958:2961 Basics <> true constr
R2912:2914 Coq.Init.Logic <> :type_scope:x_'='_x not
R2908:2911 Basics <> true constr
R2915:2921 Basics <> beq_nat def
R2923:2923 Tactics <> n var
prf 3501:3513 <> rev_exercise1
R3532:3535 Poly <> list ind
R3537:3539 Coq.Init.Datatypes <> nat ind
R3569:3571 Coq.Init.Logic <> :type_scope:x_'='_x not
R3567:3568 Tactics <> l' var
R3572:3574 Poly <> rev def
R3576:3576 Tactics <> l var
R3549:3551 Coq.Init.Logic <> :type_scope:x_'='_x not
R3548:3548 Tactics <> l var
R3552:3554 Poly <> rev def
R3556:3557 Tactics <> l' var
def 4086:4101 <> trans_eq_example
R4127:4129 Coq.Init.Datatypes <> nat ind
R4187:4189 Coq.Init.Logic <> :type_scope:x_'='_x not
R4182:4182 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4184:4184 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4186:4186 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4185:4185 Tactics <> b var
R4183:4183 Tactics <> a var
R4190:4190 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4192:4192 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4194:4194 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4193:4193 Tactics <> f var
R4191:4191 Tactics <> e var
R4165:4167 Coq.Init.Logic <> :type_scope:x_'='_x not
R4160:4160 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4162:4162 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4164:4164 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4163:4163 Tactics <> d var
R4161:4161 Tactics <> c var
R4168:4168 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4170:4170 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4172:4172 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4171:4171 Tactics <> f var
R4169:4169 Tactics <> e var
R4143:4145 Coq.Init.Logic <> :type_scope:x_'='_x not
R4138:4138 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4140:4140 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4142:4142 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4141:4141 Tactics <> b var
R4139:4139 Tactics <> a var
R4146:4146 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4148:4148 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4150:4150 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4149:4149 Tactics <> d var
R4147:4147 Tactics <> c var
prf 4451:4458 <> trans_eq
R4487:4487 Tactics <> X var
R4512:4514 Coq.Init.Logic <> :type_scope:x_'='_x not
R4511:4511 Tactics <> n var
R4515:4515 Tactics <> o var
R4503:4505 Coq.Init.Logic <> :type_scope:x_'='_x not
R4502:4502 Tactics <> m var
R4506:4506 Tactics <> o var
R4494:4496 Coq.Init.Logic <> :type_scope:x_'='_x not
R4493:4493 Tactics <> n var
R4497:4497 Tactics <> m var
def 4770:4786 <> trans_eq_example'
R4812:4814 Coq.Init.Datatypes <> nat ind
R4872:4874 Coq.Init.Logic <> :type_scope:x_'='_x not
R4867:4867 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4869:4869 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4871:4871 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4870:4870 Tactics <> b var
R4868:4868 Tactics <> a var
R4875:4875 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4877:4877 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4879:4879 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4878:4878 Tactics <> f var
R4876:4876 Tactics <> e var
R4850:4852 Coq.Init.Logic <> :type_scope:x_'='_x not
R4845:4845 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4847:4847 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4849:4849 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4848:4848 Tactics <> d var
R4846:4846 Tactics <> c var
R4853:4853 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4855:4855 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4857:4857 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4856:4856 Tactics <> f var
R4854:4854 Tactics <> e var
R4828:4830 Coq.Init.Logic <> :type_scope:x_'='_x not
R4823:4823 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4825:4825 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4827:4827 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4826:4826 Tactics <> b var
R4824:4824 Tactics <> a var
R4831:4831 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4833:4833 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4835:4835 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4834:4834 Tactics <> d var
R4832:4832 Tactics <> c var
R5350:5350 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5352:5352 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5354:5354 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5332:5339 Tactics <> trans_eq thm
R5350:5350 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5352:5352 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5354:5354 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5332:5339 Tactics <> trans_eq thm
def 5686:5702 <> trans_eq_exercise
R5724:5726 Coq.Init.Datatypes <> nat ind
R5780:5780 Coq.Init.Logic <> :type_scope:x_'='_x not
R5786:5790 Coq.Init.Logic <> :type_scope:x_'='_x not
R5801:5801 Coq.Init.Logic <> :type_scope:x_'='_x not
R5782:5784 Basics <> :nat_scope:x_'+'_x not
R5781:5781 Tactics <> n var
R5785:5785 Tactics <> p var
R5791:5798 Basics <> minustwo def
R5800:5800 Tactics <> o var
R5760:5760 Coq.Init.Logic <> :type_scope:x_'='_x not
R5766:5769 Coq.Init.Logic <> :type_scope:x_'='_x not
R5762:5764 Basics <> :nat_scope:x_'+'_x not
R5761:5761 Tactics <> n var
R5765:5765 Tactics <> p var
R5770:5770 Tactics <> m var
R5736:5739 Coq.Init.Logic <> :type_scope:x_'='_x not
R5750:5750 Coq.Init.Logic <> :type_scope:x_'='_x not
R5735:5735 Tactics <> m var
R5740:5747 Basics <> minustwo def
R5749:5749 Tactics <> o var
prf 7326:7336 <> S_injective
R7354:7356 Coq.Init.Datatypes <> nat ind
R7378:7380 Coq.Init.Logic <> :type_scope:x_'='_x not
R7377:7377 Tactics <> n var
R7381:7381 Tactics <> m var
R7365:7367 Coq.Init.Logic <> :type_scope:x_'='_x not
R7362:7362 Coq.Init.Datatypes <> S constr
R7364:7364 Tactics <> n var
R7368:7368 Coq.Init.Datatypes <> S constr
R7370:7370 Tactics <> m var
prf 7876:7888 <> inversion_ex1
R7908:7910 Coq.Init.Datatypes <> nat ind
R7940:7942 Coq.Init.Logic <> :type_scope:x_'='_x not
R7937:7937 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7939:7939 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7938:7938 Tactics <> n var
R7943:7943 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7945:7945 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7944:7944 Tactics <> m var
R7922:7924 Coq.Init.Logic <> :type_scope:x_'='_x not
R7916:7916 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7918:7919 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7921:7921 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7920:7920 Tactics <> m var
R7917:7917 Tactics <> n var
R7925:7925 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7927:7928 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7930:7930 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7929:7929 Tactics <> o var
R7926:7926 Tactics <> o var
prf 8103:8115 <> inversion_ex2
R8133:8135 Coq.Init.Datatypes <> nat ind
R8157:8159 Coq.Init.Logic <> :type_scope:x_'='_x not
R8156:8156 Tactics <> n var
R8160:8160 Tactics <> m var
R8144:8146 Coq.Init.Logic <> :type_scope:x_'='_x not
R8141:8141 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8143:8143 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8142:8142 Tactics <> n var
R8147:8147 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8149:8149 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8148:8148 Tactics <> m var
def 8282:8294 <> inversion_ex3
R8325:8325 Tactics <> X var
R8335:8338 Poly <> list ind
R8340:8340 Tactics <> X var
R8394:8396 Coq.Init.Logic <> :type_scope:x_'='_x not
R8393:8393 Tactics <> x var
R8397:8397 Tactics <> y var
R8378:8380 Coq.Init.Logic <> :type_scope:x_'='_x not
R8373:8376 Poly <> ::x_'::'_x not
R8372:8372 Tactics <> y var
R8377:8377 Tactics <> l var
R8382:8385 Poly <> ::x_'::'_x not
R8381:8381 Tactics <> x var
R8386:8386 Tactics <> j var
R8357:8359 Coq.Init.Logic <> :type_scope:x_'='_x not
R8347:8350 Poly <> ::x_'::'_x not
R8346:8346 Tactics <> x var
R8352:8355 Poly <> ::x_'::'_x not
R8351:8351 Tactics <> y var
R8356:8356 Tactics <> l var
R8361:8364 Poly <> ::x_'::'_x not
R8360:8360 Tactics <> z var
R8365:8365 Tactics <> j var
prf 8645:8655 <> beq_nat_0_l
R8695:8697 Coq.Init.Logic <> :type_scope:x_'='_x not
R8694:8694 Tactics <> n var
R8683:8685 Coq.Init.Logic <> :type_scope:x_'='_x not
R8672:8678 Basics <> beq_nat def
R8682:8682 Tactics <> n var
R8686:8689 Basics <> true constr
prf 9605:9617 <> inversion_ex4
R9633:9635 Coq.Init.Datatypes <> nat ind
R9659:9661 Coq.Init.Logic <> :type_scope:x_'='_x not
R9655:9657 Basics <> :nat_scope:x_'+'_x not
R9644:9646 Coq.Init.Logic <> :type_scope:x_'='_x not
R9641:9641 Coq.Init.Datatypes <> S constr
R9643:9643 Tactics <> n var
R9647:9647 Coq.Init.Datatypes <> O constr
prf 9723:9735 <> inversion_ex5
R9753:9755 Coq.Init.Datatypes <> nat ind
R9782:9784 Coq.Init.Logic <> :type_scope:x_'='_x not
R9779:9779 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9781:9781 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9780:9780 Tactics <> n var
R9785:9785 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9787:9787 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9786:9786 Tactics <> m var
R9766:9768 Coq.Init.Logic <> :type_scope:x_'='_x not
R9761:9765 Basics <> false constr
R9769:9772 Basics <> true constr
def 10299:10311 <> inversion_ex6
R10368:10368 Tactics <> X var
R10378:10381 Poly <> list ind
R10383:10383 Tactics <> X var
R10433:10435 Coq.Init.Logic <> :type_scope:x_'='_x not
R10432:10432 Tactics <> x var
R10436:10436 Tactics <> z var
R10417:10419 Coq.Init.Logic <> :type_scope:x_'='_x not
R10412:10415 Poly <> ::x_'::'_x not
R10411:10411 Tactics <> y var
R10416:10416 Tactics <> l var
R10421:10424 Poly <> ::x_'::'_x not
R10420:10420 Tactics <> z var
R10425:10425 Tactics <> j var
R10400:10402 Coq.Init.Logic <> :type_scope:x_'='_x not
R10390:10393 Poly <> ::x_'::'_x not
R10389:10389 Tactics <> x var
R10395:10398 Poly <> ::x_'::'_x not
R10394:10394 Tactics <> y var
R10399:10399 Tactics <> l var
R10403:10404 Poly <> ::'['_']' not
prf 11594:11600 <> f_equal
R11633:11633 Tactics <> B var
R11628:11628 Tactics <> A var
R11642:11642 Tactics <> A var
R11660:11662 Coq.Init.Logic <> :type_scope:x_'='_x not
R11657:11657 Tactics <> f var
R11659:11659 Tactics <> x var
R11663:11663 Tactics <> f var
R11665:11665 Tactics <> y var
R11649:11651 Coq.Init.Logic <> :type_scope:x_'='_x not
R11648:11648 Tactics <> x var
R11652:11652 Tactics <> y var
prf 12168:12172 <> S_inj
R12190:12192 Coq.Init.Datatypes <> nat ind
R12200:12203 Basics <> bool ind
R12256:12258 Coq.Init.Logic <> :type_scope:x_'='_x not
R12245:12251 Basics <> beq_nat def
R12255:12255 Tactics <> m var
R12253:12253 Tactics <> n var
R12259:12259 Tactics <> b var
R12231:12233 Coq.Init.Logic <> :type_scope:x_'='_x not
R12212:12218 Basics <> beq_nat def
R12227:12227 Coq.Init.Datatypes <> S constr
R12229:12229 Tactics <> m var
R12221:12221 Coq.Init.Datatypes <> S constr
R12223:12223 Tactics <> n var
R12234:12234 Tactics <> b var
prf 13097:13103 <> silly3'
R13119:13121 Coq.Init.Datatypes <> nat ind
R13212:13214 Coq.Init.Logic <> :type_scope:x_'='_x not
R13208:13211 Basics <> true constr
R13215:13221 Basics <> beq_nat def
R13224:13224 Coq.Init.Datatypes <> S constr
R13227:13227 Coq.Init.Datatypes <> S constr
R13229:13229 Tactics <> n var
R13187:13189 Coq.Init.Logic <> :type_scope:x_'='_x not
R13183:13186 Basics <> true constr
R13190:13196 Basics <> beq_nat def
R13198:13198 Tactics <> n var
R13169:13171 Coq.Init.Logic <> :type_scope:x_'='_x not
R13150:13156 Basics <> beq_nat def
R13159:13159 Coq.Init.Datatypes <> S constr
R13162:13162 Coq.Init.Datatypes <> S constr
R13164:13164 Tactics <> n var
R13172:13175 Basics <> true constr
R13139:13141 Coq.Init.Logic <> :type_scope:x_'='_x not
R13128:13134 Basics <> beq_nat def
R13136:13136 Tactics <> n var
R13142:13145 Basics <> true constr
prf 14108:14125 <> plus_n_n_injective
R14169:14171 Coq.Init.Logic <> :type_scope:x_'='_x not
R14168:14168 Tactics <> n var
R14172:14172 Tactics <> m var
R14151:14153 Coq.Init.Logic <> :type_scope:x_'='_x not
R14147:14149 Basics <> :nat_scope:x_'+'_x not
R14146:14146 Tactics <> n var
R14150:14150 Tactics <> n var
R14155:14157 Basics <> :nat_scope:x_'+'_x not
R14154:14154 Tactics <> m var
R14158:14158 Tactics <> m var
prf 15153:15175 <> double_injective_FAILED
R15225:15227 Coq.Init.Logic <> :type_scope:x_'='_x not
R15224:15224 Tactics <> n var
R15228:15228 Tactics <> m var
R15204:15206 Coq.Init.Logic <> :type_scope:x_'='_x not
R15196:15201 Induction <> double def
R15203:15203 Tactics <> n var
R15207:15212 Induction <> double def
R15214:15214 Tactics <> m var
R15508:15514 Tactics <> f_equal thm
R15508:15514 Tactics <> f_equal thm
prf 17750:17765 <> double_injective
R17815:17817 Coq.Init.Logic <> :type_scope:x_'='_x not
R17814:17814 Tactics <> n var
R17818:17818 Tactics <> m var
R17794:17796 Coq.Init.Logic <> :type_scope:x_'='_x not
R17786:17791 Induction <> double def
R17793:17793 Tactics <> n var
R17797:17802 Induction <> double def
R17804:17804 Tactics <> m var
R18691:18697 Tactics <> f_equal thm
R18691:18697 Tactics <> f_equal thm
prf 19598:19609 <> beq_nat_true
R19652:19654 Coq.Init.Logic <> :type_scope:x_'='_x not
R19651:19651 Tactics <> n var
R19655:19655 Tactics <> m var
R19640:19642 Coq.Init.Logic <> :type_scope:x_'='_x not
R19629:19635 Basics <> beq_nat def
R19639:19639 Tactics <> m var
R19637:19637 Tactics <> n var
R19643:19646 Basics <> true constr
prf 20230:20258 <> double_injective_take2_FAILED
R20308:20310 Coq.Init.Logic <> :type_scope:x_'='_x not
R20307:20307 Tactics <> n var
R20311:20311 Tactics <> m var
R20287:20289 Coq.Init.Logic <> :type_scope:x_'='_x not
R20279:20284 Induction <> double def
R20286:20286 Tactics <> n var
R20290:20295 Induction <> double def
R20297:20297 Tactics <> m var
R20591:20597 Tactics <> f_equal thm
R20591:20597 Tactics <> f_equal thm
prf 21533:21554 <> double_injective_take2
R21604:21606 Coq.Init.Logic <> :type_scope:x_'='_x not
R21603:21603 Tactics <> n var
R21607:21607 Tactics <> m var
R21583:21585 Coq.Init.Logic <> :type_scope:x_'='_x not
R21575:21580 Induction <> double def
R21582:21582 Tactics <> n var
R21586:21591 Induction <> double def
R21593:21593 Tactics <> m var
R22070:22076 Tactics <> f_equal thm
R22070:22076 Tactics <> f_equal thm
prf 24276:24286 <> beq_id_true
R24326:24328 Coq.Init.Logic <> :type_scope:x_'='_x not
R24325:24325 Tactics <> x var
R24329:24329 Tactics <> y var
R24314:24316 Coq.Init.Logic <> :type_scope:x_'='_x not
R24304:24309 Lists <> beq_id def
R24313:24313 Tactics <> y var
R24311:24311 Tactics <> x var
R24317:24320 Basics <> true constr
R24390:24392 Coq.Init.Logic <> :type_scope:x_'='_x not
R24390:24392 Coq.Init.Logic <> :type_scope:x_'='_x not
R24405:24416 Tactics <> beq_nat_true prfax
R24405:24416 Tactics <> beq_nat_true prfax
prf 24574:24593 <> nth_error_after_last
R24608:24610 Coq.Init.Datatypes <> nat ind
R24629:24632 Poly <> list ind
R24634:24634 Tactics <> X var
R24677:24679 Coq.Init.Logic <> :type_scope:x_'='_x not
R24664:24672 Poly <> nth_error def
R24676:24676 Tactics <> n var
R24674:24674 Tactics <> l var
R24680:24683 Poly <> None constr
R24651:24653 Coq.Init.Logic <> :type_scope:x_'='_x not
R24643:24648 Poly <> length def
R24650:24650 Tactics <> l var
R24654:24654 Tactics <> n var
def 25009:25014 <> square
R25022:25024 Basics <> :nat_scope:x_'*'_x not
R25021:25021 Tactics <> n var
R25025:25025 Tactics <> n var
prf 25096:25106 <> square_mult
R25136:25138 Coq.Init.Logic <> :type_scope:x_'='_x not
R25122:25127 Tactics <> square def
R25131:25133 Basics <> :nat_scope:x_'*'_x not
R25130:25130 Tactics <> n var
R25134:25134 Tactics <> m var
R25147:25149 Basics <> :nat_scope:x_'*'_x not
R25139:25144 Tactics <> square def
R25146:25146 Tactics <> n var
R25150:25155 Tactics <> square def
R25157:25157 Tactics <> m var
R25474:25479 Tactics <> square def
R25804:25813 Induction <> mult_assoc thm
R25804:25813 Induction <> mult_assoc thm
R25839:25841 Coq.Init.Logic <> :type_scope:x_'='_x not
R25835:25837 Basics <> :nat_scope:x_'*'_x not
R25831:25833 Basics <> :nat_scope:x_'*'_x not
R25847:25849 Basics <> :nat_scope:x_'*'_x not
R25843:25845 Basics <> :nat_scope:x_'*'_x not
R25839:25841 Coq.Init.Logic <> :type_scope:x_'='_x not
R25835:25837 Basics <> :nat_scope:x_'*'_x not
R25831:25833 Basics <> :nat_scope:x_'*'_x not
R25847:25849 Basics <> :nat_scope:x_'*'_x not
R25843:25845 Basics <> :nat_scope:x_'*'_x not
R25866:25874 Induction <> mult_comm thm
R25866:25874 Induction <> mult_comm thm
R25883:25892 Induction <> mult_assoc thm
R25883:25892 Induction <> mult_assoc thm
R25918:25927 Induction <> mult_assoc thm
R25918:25927 Induction <> mult_assoc thm
def 26315:26317 <> foo
R26323:26325 Coq.Init.Datatypes <> nat ind
prf 26538:26549 <> silly_fact_1
R26572:26574 Coq.Init.Logic <> :type_scope:x_'='_x not
R26568:26570 Basics <> :nat_scope:x_'+'_x not
R26563:26565 Tactics <> foo def
R26567:26567 Tactics <> m var
R26586:26588 Basics <> :nat_scope:x_'+'_x not
R26575:26577 Tactics <> foo def
R26581:26583 Basics <> :nat_scope:x_'+'_x not
R26580:26580 Tactics <> m var
def 26819:26821 <> bar
R26836:26836 Tactics <> x var
R26847:26847 Coq.Init.Datatypes <> O constr
R26858:26858 Coq.Init.Datatypes <> S constr
prf 26932:26950 <> silly_fact_2_FAILED
R26973:26975 Coq.Init.Logic <> :type_scope:x_'='_x not
R26969:26971 Basics <> :nat_scope:x_'+'_x not
R26964:26966 Tactics <> bar def
R26968:26968 Tactics <> m var
R26987:26989 Basics <> :nat_scope:x_'+'_x not
R26976:26978 Tactics <> bar def
R26982:26984 Basics <> :nat_scope:x_'+'_x not
R26981:26981 Tactics <> m var
prf 27981:27992 <> silly_fact_2
R28015:28017 Coq.Init.Logic <> :type_scope:x_'='_x not
R28011:28013 Basics <> :nat_scope:x_'+'_x not
R28006:28008 Tactics <> bar def
R28010:28010 Tactics <> m var
R28029:28031 Basics <> :nat_scope:x_'+'_x not
R28018:28020 Tactics <> bar def
R28024:28026 Basics <> :nat_scope:x_'+'_x not
R28023:28023 Tactics <> m var
prf 28382:28394 <> silly_fact_2'
R28417:28419 Coq.Init.Logic <> :type_scope:x_'='_x not
R28413:28415 Basics <> :nat_scope:x_'+'_x not
R28408:28410 Tactics <> bar def
R28412:28412 Tactics <> m var
R28431:28433 Basics <> :nat_scope:x_'+'_x not
R28420:28422 Tactics <> bar def
R28426:28428 Basics <> :nat_scope:x_'+'_x not
R28425:28425 Tactics <> m var
R28465:28467 Tactics <> bar def
def 29111:29118 <> sillyfun
R29125:29127 Coq.Init.Datatypes <> nat ind
R29132:29135 Basics <> bool ind
R29145:29151 Basics <> beq_nat def
R29153:29153 Tactics <> n var
R29178:29184 Basics <> beq_nat def
R29186:29186 Tactics <> n var
R29208:29212 Basics <> false constr
R29195:29199 Basics <> false constr
R29162:29166 Basics <> false constr
prf 29224:29237 <> sillyfun_false
R29253:29255 Coq.Init.Datatypes <> nat ind
R29271:29273 Coq.Init.Logic <> :type_scope:x_'='_x not
R29261:29268 Tactics <> sillyfun def
R29270:29270 Tactics <> n var
R29274:29278 Basics <> false constr
R29307:29314 Tactics <> sillyfun def
R29329:29335 Basics <> beq_nat def
R29329:29335 Basics <> beq_nat def
R29429:29435 Basics <> beq_nat def
R29429:29435 Basics <> beq_nat def
def 30326:30330 <> split
R30350:30353 Poly <> list ind
R30357:30357 Poly <> :type_scope:x_'*'_x not
R30356:30356 Tactics <> X var
R30358:30358 Tactics <> Y var
R30379:30379 Poly <> :type_scope:x_'*'_x not
R30386:30390 Poly <> :type_scope:x_'*'_x not
R30397:30397 Poly <> :type_scope:x_'*'_x not
R30380:30383 Poly <> list ind
R30385:30385 Tactics <> X var
R30391:30394 Poly <> list ind
R30396:30396 Tactics <> Y var
R30410:30410 Tactics <> l var
R30421:30422 Poly <> ::'['_']' not
R30427:30427 Poly <> ::'('_x_','_x_')' not
R30430:30431 Poly <> ::'('_x_','_x_')' not
R30434:30434 Poly <> ::'('_x_','_x_')' not
R30428:30429 Poly <> ::'['_']' not
R30432:30433 Poly <> ::'['_']' not
R30446:30449 Poly <> ::x_'::'_x not
R30440:30440 Poly <> ::'('_x_','_x_')' not
R30442:30443 Poly <> ::'('_x_','_x_')' not
R30445:30445 Poly <> ::'('_x_','_x_')' not
R30467:30471 Tactics <> split def
R30488:30488 Poly <> ::'('_x_','_x_')' not
R30491:30492 Poly <> ::'('_x_','_x_')' not
R30495:30495 Poly <> ::'('_x_','_x_')' not
R30500:30500 Poly <> ::'('_x_','_x_')' not
R30508:30509 Poly <> ::'('_x_','_x_')' not
R30517:30517 Poly <> ::'('_x_','_x_')' not
R30502:30505 Poly <> ::x_'::'_x not
R30511:30514 Poly <> ::x_'::'_x not
prf 30627:30639 <> combine_split
R30659:30662 Poly <> list ind
R30666:30668 Poly <> :type_scope:x_'*'_x not
R30665:30665 Tactics <> X var
R30669:30669 Tactics <> Y var
R30719:30721 Coq.Init.Logic <> :type_scope:x_'='_x not
R30706:30712 Poly <> combine def
R30717:30718 Tactics <> l2 var
R30714:30715 Tactics <> l1 var
R30722:30722 Tactics <> l var
R30689:30691 Coq.Init.Logic <> :type_scope:x_'='_x not
R30682:30686 Tactics <> split def
R30688:30688 Tactics <> l var
R30692:30692 Poly <> ::'('_x_','_x_')' not
R30695:30696 Poly <> ::'('_x_','_x_')' not
R30699:30699 Poly <> ::'('_x_','_x_')' not
R30693:30694 Tactics <> l1 var
R30697:30698 Tactics <> l2 var
def 31026:31034 <> sillyfun1
R31041:31043 Coq.Init.Datatypes <> nat ind
R31048:31051 Basics <> bool ind
R31061:31067 Basics <> beq_nat def
R31069:31069 Tactics <> n var
R31093:31099 Basics <> beq_nat def
R31101:31101 Tactics <> n var
R31122:31126 Basics <> false constr
R31110:31113 Basics <> true constr
R31078:31081 Basics <> true constr
prf 31385:31404 <> sillyfun1_odd_FAILED
R31420:31422 Coq.Init.Datatypes <> nat ind
R31464:31466 Coq.Init.Logic <> :type_scope:x_'='_x not
R31458:31461 Basics <> oddb def
R31463:31463 Tactics <> n var
R31467:31470 Basics <> true constr
R31442:31444 Coq.Init.Logic <> :type_scope:x_'='_x not
R31431:31439 Tactics <> sillyfun1 def
R31441:31441 Tactics <> n var
R31445:31448 Basics <> true constr
R31502:31510 Tactics <> sillyfun1 def
R31531:31537 Basics <> beq_nat def
R31531:31537 Basics <> beq_nat def
prf 32387:32399 <> sillyfun1_odd
R32415:32417 Coq.Init.Datatypes <> nat ind
R32459:32461 Coq.Init.Logic <> :type_scope:x_'='_x not
R32453:32456 Basics <> oddb def
R32458:32458 Tactics <> n var
R32462:32465 Basics <> true constr
R32437:32439 Coq.Init.Logic <> :type_scope:x_'='_x not
R32426:32434 Tactics <> sillyfun1 def
R32436:32436 Tactics <> n var
R32440:32443 Basics <> true constr
R32497:32505 Tactics <> sillyfun1 def
R32526:32532 Basics <> beq_nat def
R32526:32532 Basics <> beq_nat def
R32781:32792 Tactics <> beq_nat_true prfax
R32781:32792 Tactics <> beq_nat_true prfax
R33079:33085 Basics <> beq_nat def
R33079:33085 Basics <> beq_nat def
R33145:33156 Tactics <> beq_nat_true prfax
R33145:33156 Tactics <> beq_nat_true prfax
prf 33320:33341 <> bool_fn_applied_thrice
R33367:33370 Basics <> bool ind
R33359:33362 Basics <> bool ind
R33378:33381 Basics <> bool ind
R33398:33400 Coq.Init.Logic <> :type_scope:x_'='_x not
R33387:33387 Tactics <> f var
R33390:33390 Tactics <> f var
R33393:33393 Tactics <> f var
R33395:33395 Tactics <> b var
R33401:33401 Tactics <> f var
R33403:33403 Tactics <> b var
prf 35714:35724 <> beq_nat_sym
R35742:35744 Coq.Init.Datatypes <> nat ind
R35761:35763 Coq.Init.Logic <> :type_scope:x_'='_x not
R35750:35756 Basics <> beq_nat def
R35760:35760 Tactics <> m var
R35758:35758 Tactics <> n var
R35764:35770 Basics <> beq_nat def
R35774:35774 Tactics <> n var
R35772:35772 Tactics <> m var
prf 36168:36180 <> beq_nat_trans
R36259:36261 Coq.Init.Logic <> :type_scope:x_'='_x not
R36248:36254 Basics <> beq_nat def
R36258:36258 Tactics <> p var
R36256:36256 Tactics <> n var
R36262:36265 Basics <> true constr
R36235:36237 Coq.Init.Logic <> :type_scope:x_'='_x not
R36224:36230 Basics <> beq_nat def
R36234:36234 Tactics <> p var
R36232:36232 Tactics <> m var
R36238:36241 Basics <> true constr
R36211:36213 Coq.Init.Logic <> :type_scope:x_'='_x not
R36200:36206 Basics <> beq_nat def
R36210:36210 Tactics <> m var
R36208:36208 Tactics <> n var
R36214:36217 Basics <> true constr
def 37011:37033 <> split_combine_statement
prf 37207:37219 <> split_combine
R37223:37245 Tactics <> split_combine_statement prfax
prf 37463:37477 <> filter_exercise
R37512:37515 Basics <> bool ind
R37507:37507 Tactics <> X var
R37552:37552 Tactics <> X var
R37563:37566 Poly <> list ind
R37568:37568 Tactics <> X var
R37615:37617 Coq.Init.Logic <> :type_scope:x_'='_x not
R37609:37612 Tactics <> test var
R37614:37614 Tactics <> x var
R37618:37621 Basics <> true constr
R37590:37592 Coq.Init.Logic <> :type_scope:x_'='_x not
R37577:37582 Poly <> filter def
R37589:37589 Tactics <> l var
R37584:37587 Tactics <> test var
R37594:37597 Poly <> ::x_'::'_x not
R37593:37593 Tactics <> x var
R37598:37599 Tactics <> lf var
