DIGEST abaa62d83a3b973686a71fe7ce7b6ddb
FLogic
R97:103 Tactics <> <> lib
R991:993 Coq.Init.Logic <> :type_scope:x_'='_x not
R1062:1064 Coq.Init.Datatypes <> nat ind
R1072:1074 Coq.Init.Logic <> :type_scope:x_'='_x not
R1068:1070 Basics <> :nat_scope:x_'+'_x not
R1067:1067 Logic <> n var
R1071:1071 Logic <> m var
R1076:1078 Basics <> :nat_scope:x_'+'_x not
R1075:1075 Logic <> m var
R1079:1079 Logic <> n var
R1326:1328 Coq.Init.Logic <> :type_scope:x_'='_x not
R1366:1368 Coq.Init.Datatypes <> nat ind
R1372:1374 Coq.Init.Logic <> :type_scope:x_'='_x not
R1371:1371 Logic <> n var
R1402:1404 Coq.Init.Logic <> :type_scope:x_'='_x not
prf 1737:1749 <> plus_2_2_is_4
R1760:1762 Coq.Init.Logic <> :type_scope:x_'='_x not
R1756:1758 Basics <> :nat_scope:x_'+'_x not
def 2000:2008 <> plus_fact
R2025:2027 Coq.Init.Logic <> :type_scope:x_'='_x not
R2021:2023 Basics <> :nat_scope:x_'+'_x not
R2037:2045 Logic <> plus_fact def
prf 2230:2246 <> plus_fact_is_true
R2252:2260 Logic <> plus_fact def
def 2585:2592 <> is_three
R2599:2601 Coq.Init.Datatypes <> nat ind
R2617:2619 Coq.Init.Logic <> :type_scope:x_'='_x not
R2616:2616 Logic <> n var
R2629:2636 Logic <> is_three def
def 2893:2901 <> injective
R2919:2919 Logic <> B var
R2914:2914 Logic <> A var
R2940:2940 Logic <> A var
R2957:2959 Coq.Init.Logic <> :type_scope:x_'='_x not
R2956:2956 Logic <> x var
R2960:2960 Logic <> y var
R2946:2948 Coq.Init.Logic <> :type_scope:x_'='_x not
R2943:2943 Logic <> f var
R2945:2945 Logic <> x var
R2949:2949 Logic <> f var
R2951:2951 Logic <> y var
prf 2970:2977 <> succ_inj
R2981:2989 Logic <> injective def
R2991:2991 Coq.Init.Datatypes <> S constr
R3324:3325 Coq.Init.Logic <> eq ind
def 4157:4167 <> and_example
R4180:4185 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R4176:4178 Coq.Init.Logic <> :type_scope:x_'='_x not
R4172:4174 Basics <> :nat_scope:x_'+'_x not
R4191:4193 Coq.Init.Logic <> :type_scope:x_'='_x not
R4187:4189 Basics <> :nat_scope:x_'*'_x not
prf 4602:4610 <> and_intro
R4644:4647 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R4643:4643 Logic <> A var
R4648:4648 Logic <> B var
R4638:4638 Logic <> B var
R4633:4633 Logic <> A var
def 4953:4964 <> and_example'
R4977:4980 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R4973:4975 Coq.Init.Logic <> :type_scope:x_'='_x not
R4969:4971 Basics <> :nat_scope:x_'+'_x not
R4986:4988 Coq.Init.Logic <> :type_scope:x_'='_x not
R4982:4984 Basics <> :nat_scope:x_'*'_x not
R5007:5015 Logic <> and_intro thm
R5007:5015 Logic <> and_intro thm
R5096:5097 Coq.Init.Peano <> lt def
R5139:5141 Coq.Init.Logic <> and ind
def 5233:5244 <> and_exercise
R5263:5265 Coq.Init.Datatypes <> nat ind
R5286:5289 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R5282:5284 Coq.Init.Logic <> :type_scope:x_'='_x not
R5281:5281 Logic <> n var
R5291:5293 Coq.Init.Logic <> :type_scope:x_'='_x not
R5290:5290 Logic <> m var
R5273:5275 Coq.Init.Logic <> :type_scope:x_'='_x not
R5269:5271 Basics <> :nat_scope:x_'+'_x not
R5268:5268 Logic <> n var
R5272:5272 Logic <> m var
R5555:5562 Induction <> plus_n_O thm
R5555:5562 Induction <> plus_n_O thm
R5596:5604 Induction <> plus_n_Sm thm
R5596:5604 Induction <> plus_n_Sm thm
R5668:5676 Induction <> plus_comm thm
R5668:5676 Induction <> plus_comm thm
R5695:5702 Induction <> plus_n_O thm
R5695:5702 Induction <> plus_n_O thm
R5736:5744 Induction <> plus_comm thm
R5736:5744 Induction <> plus_comm thm
R5763:5771 Induction <> plus_n_Sm thm
R5763:5771 Induction <> plus_n_Sm thm
prf 6330:6341 <> and_example2
R6360:6362 Coq.Init.Datatypes <> nat ind
R6388:6390 Coq.Init.Logic <> :type_scope:x_'='_x not
R6384:6386 Basics <> :nat_scope:x_'+'_x not
R6383:6383 Logic <> n var
R6387:6387 Logic <> m var
R6370:6373 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6366:6368 Coq.Init.Logic <> :type_scope:x_'='_x not
R6365:6365 Logic <> n var
R6375:6377 Coq.Init.Logic <> :type_scope:x_'='_x not
R6374:6374 Logic <> m var
prf 6642:6654 <> and_example2'
R6673:6675 Coq.Init.Datatypes <> nat ind
R6701:6703 Coq.Init.Logic <> :type_scope:x_'='_x not
R6697:6699 Basics <> :nat_scope:x_'+'_x not
R6696:6696 Logic <> n var
R6700:6700 Logic <> m var
R6683:6686 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6679:6681 Coq.Init.Logic <> :type_scope:x_'='_x not
R6678:6678 Logic <> n var
R6688:6690 Coq.Init.Logic <> :type_scope:x_'='_x not
R6687:6687 Logic <> m var
prf 6982:6995 <> and_example2''
R7014:7016 Coq.Init.Datatypes <> nat ind
R7042:7044 Coq.Init.Logic <> :type_scope:x_'='_x not
R7038:7040 Basics <> :nat_scope:x_'+'_x not
R7037:7037 Logic <> n var
R7041:7041 Logic <> m var
R7029:7031 Coq.Init.Logic <> :type_scope:x_'='_x not
R7028:7028 Logic <> m var
R7020:7022 Coq.Init.Logic <> :type_scope:x_'='_x not
R7019:7019 Logic <> n var
prf 7397:7408 <> and_example3
R7427:7429 Coq.Init.Datatypes <> nat ind
R7450:7452 Coq.Init.Logic <> :type_scope:x_'='_x not
R7446:7448 Basics <> :nat_scope:x_'*'_x not
R7445:7445 Logic <> n var
R7449:7449 Logic <> m var
R7437:7439 Coq.Init.Logic <> :type_scope:x_'='_x not
R7433:7435 Basics <> :nat_scope:x_'+'_x not
R7432:7432 Logic <> n var
R7436:7436 Logic <> m var
R7523:7526 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7519:7521 Coq.Init.Logic <> :type_scope:x_'='_x not
R7528:7530 Coq.Init.Logic <> :type_scope:x_'='_x not
R7523:7526 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7519:7521 Coq.Init.Logic <> :type_scope:x_'='_x not
R7528:7530 Coq.Init.Logic <> :type_scope:x_'='_x not
R7545:7556 Logic <> and_exercise def
R7545:7556 Logic <> and_exercise def
prf 7818:7822 <> proj1
R7857:7857 Logic <> P var
R7848:7851 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7847:7847 Logic <> P var
R7852:7852 Logic <> Q var
prf 7962:7966 <> proj2
R8001:8001 Logic <> Q var
R7992:7995 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7991:7991 Logic <> P var
R7996:7996 Logic <> Q var
prf 8284:8293 <> and_commut
R8329:8332 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8328:8328 Logic <> Q var
R8333:8333 Logic <> P var
R8319:8322 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8318:8318 Logic <> P var
R8323:8323 Logic <> Q var
prf 8707:8715 <> and_assoc
R8759:8759 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8766:8770 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8761:8764 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8760:8760 Logic <> P var
R8765:8765 Logic <> Q var
R8771:8771 Logic <> R var
R8743:8747 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8754:8754 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8742:8742 Logic <> P var
R8749:8752 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8748:8748 Logic <> Q var
R8753:8753 Logic <> R var
R9099:9101 Coq.Init.Logic <> and ind
prf 9665:9674 <> or_example
R9693:9695 Coq.Init.Datatypes <> nat ind
R9721:9723 Coq.Init.Logic <> :type_scope:x_'='_x not
R9717:9719 Basics <> :nat_scope:x_'*'_x not
R9716:9716 Logic <> n var
R9720:9720 Logic <> m var
R9703:9706 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R9699:9701 Coq.Init.Logic <> :type_scope:x_'='_x not
R9698:9698 Logic <> n var
R9708:9710 Coq.Init.Logic <> :type_scope:x_'='_x not
R9707:9707 Logic <> m var
R9938:9945 Coq.Init.Peano <> mult_n_O thm
R9938:9945 Coq.Init.Peano <> mult_n_O thm
prf 10305:10312 <> or_intro
R10341:10344 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R10340:10340 Logic <> A var
R10345:10345 Logic <> B var
R10335:10335 Logic <> A var
prf 10495:10506 <> zero_or_succ
R10523:10525 Coq.Init.Datatypes <> nat ind
R10533:10536 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R10529:10531 Coq.Init.Logic <> :type_scope:x_'='_x not
R10528:10528 Logic <> n var
R10538:10540 Coq.Init.Logic <> :type_scope:x_'='_x not
R10537:10537 Logic <> n var
R10541:10541 Coq.Init.Datatypes <> S constr
R10544:10547 Coq.Init.Peano <> pred def
R10549:10549 Logic <> n var
prf 10701:10709 <> mult_eq_0
R10745:10748 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R10741:10743 Coq.Init.Logic <> :type_scope:x_'='_x not
R10740:10740 Logic <> n var
R10750:10752 Coq.Init.Logic <> :type_scope:x_'='_x not
R10749:10749 Logic <> m var
R10732:10734 Coq.Init.Logic <> :type_scope:x_'='_x not
R10728:10730 Basics <> :nat_scope:x_'*'_x not
R10727:10727 Logic <> n var
R10731:10731 Logic <> m var
prf 11210:11218 <> or_commut
R11255:11258 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R11254:11254 Logic <> Q var
R11259:11259 Logic <> P var
R11244:11247 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R11243:11243 Logic <> P var
R11248:11248 Logic <> Q var
mod 12314:12318 <> MyNot
def 12333:12335 MyNot not
R12354:12358 Coq.Init.Logic <> False ind
R12349:12349 Logic <> P var
R12381:12383 Logic MyNot not def
not 12371 MyNot :type_scope:'~'_x
R12409:12411 Logic MyNot not def
R12443:12447 Logic <> <> mod
R12679:12683 Coq.Init.Logic <> False ind
prf 12708:12725 <> ex_falso_quodlibet
R12757:12757 Logic <> P var
R12748:12752 Coq.Init.Logic <> False ind
prf 13272:13290 <> not_implies_our_not
R13343:13343 Logic <> Q var
R13338:13338 Logic <> P var
R13313:13314 Coq.Init.Logic <> :type_scope:'~'_x not
R13315:13315 Logic <> P var
R13393:13395 Coq.Init.Logic <> not def
prf 13555:13566 <> zero_not_one
R13570:13571 Coq.Init.Logic <> :type_scope:'~'_x not
R13577:13577 Coq.Init.Logic <> :type_scope:'~'_x not
R13573:13575 Coq.Init.Logic <> :type_scope:x_'='_x not
R13736:13739 Coq.Init.Logic <> :type_scope:x_'<>'_x not
prf 13769:13781 <> zero_not_one'
R13786:13789 Coq.Init.Logic <> :type_scope:x_'<>'_x not
prf 14195:14203 <> not_False
R14209:14210 Coq.Init.Logic <> :type_scope:'~'_x not
R14211:14215 Coq.Init.Logic <> False ind
R14234:14236 Coq.Init.Logic <> not def
prf 14932:14961 <> contradiction_implies_anything
R14999:14999 Logic <> Q var
R14988:14991 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R14987:14987 Logic <> P var
R14992:14992 Coq.Init.Logic <> :type_scope:'~'_x not
R14993:14993 Logic <> P var
R15063:15065 Coq.Init.Logic <> not def
prf 15122:15131 <> double_neg
R15159:15159 Coq.Init.Logic <> :type_scope:'~'_x not
R15160:15160 Coq.Init.Logic <> :type_scope:'~'_x not
R15161:15161 Logic <> P var
R15154:15154 Logic <> P var
R15216:15218 Coq.Init.Logic <> not def
prf 15534:15547 <> contrapositive
R15593:15593 Coq.Init.Logic <> :type_scope:'~'_x not
R15594:15594 Logic <> P var
R15587:15587 Coq.Init.Logic <> :type_scope:'~'_x not
R15588:15588 Logic <> Q var
R15580:15580 Logic <> Q var
R15575:15575 Logic <> P var
R15630:15632 Coq.Init.Logic <> not def
prf 15772:15794 <> not_both_true_and_false
R15817:15819 Coq.Init.Logic <> :type_scope:'~'_x not
R15827:15827 Coq.Init.Logic <> :type_scope:'~'_x not
R15821:15824 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R15820:15820 Logic <> P var
R15825:15825 Coq.Init.Logic <> :type_scope:'~'_x not
R15826:15826 Logic <> P var
R15856:15858 Coq.Init.Logic <> not def
def 15987:16007 <> informal_not_PNP_TODO
prf 16631:16647 <> not_true_is_false
R16662:16665 Basics <> bool ind
R16684:16686 Coq.Init.Logic <> :type_scope:x_'='_x not
R16683:16683 Logic <> b var
R16687:16691 Basics <> false constr
R16671:16674 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R16670:16670 Logic <> b var
R16675:16678 Basics <> true constr
R16746:16748 Coq.Init.Logic <> not def
R16766:16783 Logic <> ex_falso_quodlibet thm
R16766:16783 Logic <> ex_falso_quodlibet thm
prf 16994:17011 <> not_true_is_false'
R17026:17029 Basics <> bool ind
R17048:17050 Coq.Init.Logic <> :type_scope:x_'='_x not
R17047:17047 Logic <> b var
R17051:17055 Basics <> false constr
R17035:17038 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R17034:17034 Logic <> b var
R17039:17042 Basics <> true constr
R17111:17113 Coq.Init.Logic <> not def
prf 17490:17501 <> True_is_true
R17505:17508 Coq.Init.Logic <> True ind
R17524:17524 Coq.Init.Logic <> I constr
R17524:17524 Coq.Init.Logic <> I constr
mod 18207:18211 <> MyIff
def 18226:18228 MyIff iff
R18246:18246 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R18253:18258 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R18265:18265 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R18252:18252 Logic <> Q var
R18247:18247 Logic <> P var
R18264:18264 Logic <> P var
R18259:18259 Logic <> Q var
R18292:18294 Logic MyIff iff def
not 18278 MyIff :type_scope:x_'<->'_x
R18396:18400 Logic <> <> mod
prf 18412:18418 <> iff_sym
R18458:18462 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R18457:18457 Logic <> Q var
R18463:18463 Logic <> P var
R18445:18449 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R18444:18444 Logic <> P var
R18450:18450 Logic <> Q var
prf 18592:18609 <> not_true_iff_false
R18634:18638 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R18626:18629 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R18625:18625 Logic <> b var
R18630:18633 Basics <> true constr
R18640:18642 Coq.Init.Logic <> :type_scope:x_'='_x not
R18639:18639 Logic <> b var
R18643:18647 Basics <> false constr
R18719:18735 Logic <> not_true_is_false thm
R18719:18735 Logic <> not_true_is_false thm
prf 19018:19025 <> iff_refl
R19049:19053 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R19048:19048 Logic <> P var
R19054:19054 Logic <> P var
prf 19117:19125 <> iff_trans
R19180:19184 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R19179:19179 Logic <> P var
R19185:19185 Logic <> R var
R19167:19171 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R19166:19166 Logic <> Q var
R19172:19172 Logic <> R var
R19154:19158 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R19153:19153 Logic <> P var
R19159:19159 Logic <> Q var
prf 19410:19432 <> or_distributes_over_and
R19472:19476 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R19460:19464 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R19471:19471 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R19459:19459 Logic <> P var
R19466:19469 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R19465:19465 Logic <> Q var
R19470:19470 Logic <> R var
R19477:19477 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R19484:19489 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R19496:19496 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R19479:19482 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R19478:19478 Logic <> P var
R19483:19483 Logic <> Q var
R19491:19494 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R19490:19490 Logic <> P var
R19495:19495 Logic <> R var
prf 19822:19844 <> and_distributes_over_or
R19884:19888 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R19872:19876 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R19883:19883 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R19871:19871 Logic <> P var
R19878:19881 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R19877:19877 Logic <> Q var
R19882:19882 Logic <> R var
R19889:19889 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R19896:19901 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R19908:19908 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R19891:19894 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R19890:19890 Logic <> P var
R19895:19895 Logic <> Q var
R19903:19906 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R19902:19902 Logic <> P var
R19907:19907 Logic <> R var
R20874:20891 Coq.Setoids.Setoid <> <> lib
prf 21045:21050 <> mult_0
R21075:21079 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R21071:21073 Coq.Init.Logic <> :type_scope:x_'='_x not
R21067:21069 Basics <> :nat_scope:x_'*'_x not
R21066:21066 Logic <> n var
R21070:21070 Logic <> m var
R21085:21088 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R21081:21083 Coq.Init.Logic <> :type_scope:x_'='_x not
R21080:21080 Logic <> n var
R21090:21092 Coq.Init.Logic <> :type_scope:x_'='_x not
R21089:21089 Logic <> m var
R21122:21130 Logic <> mult_eq_0 thm
R21122:21130 Logic <> mult_eq_0 thm
R21143:21152 Logic <> or_example thm
R21143:21152 Logic <> or_example thm
prf 21167:21174 <> or_assoc
R21214:21218 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R21202:21206 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R21213:21213 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R21201:21201 Logic <> P var
R21208:21211 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R21207:21207 Logic <> Q var
R21212:21212 Logic <> R var
R21219:21219 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R21226:21230 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R21221:21224 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R21220:21220 Logic <> P var
R21225:21225 Logic <> Q var
R21231:21231 Logic <> R var
prf 21679:21686 <> mult_0_3
R21719:21723 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R21715:21717 Coq.Init.Logic <> :type_scope:x_'='_x not
R21711:21713 Basics <> :nat_scope:x_'*'_x not
R21707:21709 Basics <> :nat_scope:x_'*'_x not
R21706:21706 Logic <> n var
R21710:21710 Logic <> m var
R21714:21714 Logic <> p var
R21729:21732 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R21725:21727 Coq.Init.Logic <> :type_scope:x_'='_x not
R21724:21724 Logic <> n var
R21738:21741 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R21734:21736 Coq.Init.Logic <> :type_scope:x_'='_x not
R21733:21733 Logic <> m var
R21743:21745 Coq.Init.Logic <> :type_scope:x_'='_x not
R21742:21742 Logic <> p var
R21782:21787 Logic <> mult_0 thm
R21782:21787 Logic <> mult_0 thm
R21798:21803 Logic <> mult_0 thm
R21798:21803 Logic <> mult_0 thm
R21814:21821 Logic <> or_assoc thm
R21814:21821 Logic <> or_assoc thm
prf 22019:22035 <> apply_iff_example
R22054:22056 Coq.Init.Datatypes <> nat ind
R22077:22080 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R22073:22075 Coq.Init.Logic <> :type_scope:x_'='_x not
R22072:22072 Logic <> n var
R22082:22084 Coq.Init.Logic <> :type_scope:x_'='_x not
R22081:22081 Logic <> m var
R22064:22066 Coq.Init.Logic <> :type_scope:x_'='_x not
R22060:22062 Basics <> :nat_scope:x_'*'_x not
R22059:22059 Logic <> n var
R22063:22063 Logic <> m var
R22117:22122 Logic <> mult_0 thm
R22117:22122 Logic <> mult_0 thm
prf 22996:23007 <> four_is_even
R23011:23017 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23025:23026 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23022:23024 Coq.Init.Datatypes <> nat ind
R23028:23030 Coq.Init.Logic <> :type_scope:x_'='_x not
R23032:23034 Basics <> :nat_scope:x_'+'_x not
R23031:23031 Logic <> n var
R23035:23035 Logic <> n var
prf 23270:23285 <> exists_example_2
R23329:23335 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23337:23338 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23340:23342 Coq.Init.Logic <> :type_scope:x_'='_x not
R23339:23339 Logic <> n var
R23344:23346 Basics <> :nat_scope:x_'+'_x not
R23347:23347 Logic <> o var
R23302:23308 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23310:23311 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23313:23315 Coq.Init.Logic <> :type_scope:x_'='_x not
R23312:23312 Logic <> n var
R23317:23319 Basics <> :nat_scope:x_'+'_x not
R23320:23320 Logic <> m var
R23496:23498 Basics <> :nat_scope:x_'+'_x not
R23496:23498 Basics <> :nat_scope:x_'+'_x not
prf 23763:23777 <> dist_not_exists
R23802:23802 Logic <> X var
R23835:23837 Coq.Init.Logic <> :type_scope:'~'_x not
R23853:23853 Coq.Init.Logic <> :type_scope:'~'_x not
R23838:23844 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23846:23847 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23848:23849 Coq.Init.Logic <> :type_scope:'~'_x not
R23850:23850 Logic <> P var
R23852:23852 Logic <> x var
R23827:23827 Logic <> P var
R23829:23829 Logic <> x var
R23894:23896 Coq.Init.Logic <> not def
prf 24107:24120 <> dist_exists_or
R24147:24147 Logic <> X var
R24161:24161 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R24182:24187 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R24162:24168 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R24170:24171 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R24175:24178 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R24172:24172 Logic <> P var
R24174:24174 Logic <> x var
R24179:24179 Logic <> Q var
R24181:24181 Logic <> x var
R24188:24188 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R24202:24207 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R24221:24221 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R24189:24195 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R24197:24198 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R24199:24199 Logic <> P var
R24201:24201 Logic <> x var
R24208:24214 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R24216:24217 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R24218:24218 Logic <> Q var
R24220:24220 Logic <> x var
prf 24464:24478 <> dist_exists_and
R24505:24505 Logic <> X var
R24549:24549 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R24567:24572 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R24590:24590 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R24550:24556 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R24562:24563 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R24561:24561 Logic <> X var
R24564:24564 Logic <> P var
R24566:24566 Logic <> x var
R24573:24579 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R24585:24586 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R24584:24584 Logic <> X var
R24587:24587 Logic <> Q var
R24589:24589 Logic <> x var
R24520:24526 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R24532:24533 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R24531:24531 Logic <> X var
R24537:24540 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R24534:24534 Logic <> P var
R24536:24536 Logic <> x var
R24541:24541 Logic <> Q var
R24543:24543 Logic <> x var
def 25554:25555 <> In
R25573:25573 Logic <> A var
R25581:25584 Poly <> list ind
R25586:25586 Logic <> A var
R25607:25607 Logic <> l var
R25618:25619 Poly <> ::'['_']' not
R25624:25628 Coq.Init.Logic <> False ind
R25636:25639 Poly <> ::x_'::'_x not
R25652:25655 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R25648:25650 Coq.Init.Logic <> :type_scope:x_'='_x not
R25651:25651 Logic <> x var
R25656:25657 Logic <> In def
R25659:25659 Logic <> x var
def 25793:25804 <> In_example_1
R25808:25809 Logic <> In def
R25813:25813 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25815:25816 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25818:25819 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25821:25822 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25824:25825 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25827:25827 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 25924:25935 <> In_example_2
R25968:25974 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R25977:25978 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R25980:25982 Coq.Init.Logic <> :type_scope:x_'='_x not
R25979:25979 Logic <> n var
R25984:25986 Basics <> :nat_scope:x_'*'_x not
R25987:25988 Logic <> n' var
R25951:25952 Logic <> In def
R25956:25956 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25958:25959 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25961:25961 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25954:25954 Logic <> n var
prf 26450:26455 <> In_map
R26491:26491 Logic <> B var
R26486:26486 Logic <> A var
R26499:26502 Poly <> list ind
R26504:26504 Logic <> A var
R26512:26512 Logic <> A var
R26534:26535 Logic <> In def
R26544:26546 Poly <> map def
R26550:26550 Logic <> l var
R26548:26548 Logic <> f var
R26538:26538 Logic <> f var
R26540:26540 Logic <> x var
R26520:26521 Logic <> In def
R26525:26525 Logic <> l var
R26523:26523 Logic <> x var
prf 27437:27446 <> In_map_iff
R27482:27482 Logic <> B var
R27477:27477 Logic <> A var
R27490:27493 Poly <> list ind
R27495:27495 Logic <> A var
R27503:27503 Logic <> B var
R27525:27533 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R27511:27512 Logic <> In def
R27517:27519 Poly <> map def
R27523:27523 Logic <> l var
R27521:27521 Logic <> f var
R27514:27514 Logic <> y var
R27534:27540 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R27542:27543 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R27551:27554 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R27547:27549 Coq.Init.Logic <> :type_scope:x_'='_x not
R27544:27544 Logic <> f var
R27546:27546 Logic <> x var
R27550:27550 Logic <> y var
R27555:27556 Logic <> In def
R27560:27560 Logic <> l var
R27558:27558 Logic <> x var
R27990:27995 Logic <> In_map thm
R27990:27995 Logic <> In_map thm
prf 28068:28077 <> In_app_iff
R28098:28098 Logic <> A var
R28116:28120 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R28104:28105 Logic <> In def
R28111:28112 Poly <> ::x_'++'_x not
R28110:28110 Logic <> l var
R28113:28114 Logic <> l' var
R28107:28107 Logic <> a var
R28127:28130 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R28121:28122 Logic <> In def
R28126:28126 Logic <> l var
R28124:28124 Logic <> a var
R28131:28132 Logic <> In def
R28136:28137 Logic <> l' var
R28134:28134 Logic <> a var
R28356:28363 Logic <> or_assoc thm
R28356:28363 Logic <> or_assoc thm
def 29234:29236 <> All
R29254:29254 Logic <> T var
R29270:29273 Poly <> list ind
R29275:29275 Logic <> T var
R29296:29296 Logic <> l var
R29308:29309 Poly <> ::'['_']' not
R29314:29317 Coq.Init.Logic <> True ind
R29325:29328 Poly <> ::x_'::'_x not
R29339:29342 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R29335:29335 Logic <> P var
R29343:29345 Logic <> All def
R29347:29347 Logic <> P var
prf 29366:29371 <> All_In
R29391:29391 Logic <> T var
R29407:29410 Poly <> list ind
R29412:29412 Logic <> T var
R29420:29420 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R29444:29453 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R29441:29441 Logic <> P var
R29443:29443 Logic <> x var
R29431:29432 Logic <> In def
R29436:29436 Logic <> l var
R29434:29434 Logic <> x var
R29454:29456 Logic <> All def
R29460:29460 Logic <> l var
R29458:29458 Logic <> P var
def 30392:30407 <> combine_odd_even
R30423:30425 Coq.Init.Datatypes <> nat ind
R30438:30440 Coq.Init.Datatypes <> nat ind
prf 30586:30607 <> combine_odd_even_intro
R30634:30636 Coq.Init.Datatypes <> nat ind
R30652:30654 Coq.Init.Datatypes <> nat ind
R30730:30745 Logic <> combine_odd_even prfax
R30758:30758 Logic <> n var
R30752:30756 Logic <> Peven var
R30747:30750 Logic <> Podd var
R30714:30718 Logic <> Peven var
R30720:30720 Logic <> n var
R30702:30704 Coq.Init.Logic <> :type_scope:x_'='_x not
R30696:30699 Basics <> oddb def
R30701:30701 Logic <> n var
R30705:30709 Basics <> false constr
R30680:30683 Logic <> Podd var
R30685:30685 Logic <> n var
R30669:30671 Coq.Init.Logic <> :type_scope:x_'='_x not
R30663:30666 Basics <> oddb def
R30668:30668 Logic <> n var
R30672:30675 Basics <> true constr
prf 30808:30832 <> combine_odd_even_elim_odd
R30859:30861 Coq.Init.Datatypes <> nat ind
R30877:30879 Coq.Init.Datatypes <> nat ind
R30945:30948 Logic <> Podd var
R30950:30950 Logic <> n var
R30930:30932 Coq.Init.Logic <> :type_scope:x_'='_x not
R30924:30927 Basics <> oddb def
R30929:30929 Logic <> n var
R30933:30936 Basics <> true constr
R30887:30902 Logic <> combine_odd_even prfax
R30915:30915 Logic <> n var
R30909:30913 Logic <> Peven var
R30904:30907 Logic <> Podd var
prf 31000:31025 <> combine_odd_even_elim_even
R31052:31054 Coq.Init.Datatypes <> nat ind
R31070:31072 Coq.Init.Datatypes <> nat ind
R31139:31143 Logic <> Peven var
R31145:31145 Logic <> n var
R31123:31125 Coq.Init.Logic <> :type_scope:x_'='_x not
R31117:31120 Basics <> oddb def
R31122:31122 Logic <> n var
R31126:31130 Basics <> false constr
R31080:31095 Logic <> combine_odd_even prfax
R31108:31108 Logic <> n var
R31102:31106 Logic <> Peven var
R31097:31100 Logic <> Podd var
R31918:31926 Induction <> plus_comm thm
prf 33246:33255 <> plus_comm3
R33286:33288 Coq.Init.Logic <> :type_scope:x_'='_x not
R33276:33279 Basics <> :nat_scope:x_'+'_x not
R33285:33285 Basics <> :nat_scope:x_'+'_x not
R33275:33275 Logic <> x var
R33281:33283 Basics <> :nat_scope:x_'+'_x not
R33280:33280 Logic <> y var
R33284:33284 Logic <> z var
R33289:33289 Basics <> :nat_scope:x_'+'_x not
R33295:33298 Basics <> :nat_scope:x_'+'_x not
R33291:33293 Basics <> :nat_scope:x_'+'_x not
R33290:33290 Logic <> z var
R33294:33294 Logic <> y var
R33299:33299 Logic <> x var
R33572:33580 Induction <> plus_comm thm
R33572:33580 Induction <> plus_comm thm
R33593:33601 Induction <> plus_comm thm
R33593:33601 Induction <> plus_comm thm
prf 33873:33888 <> plus_comm3_take2
R33919:33921 Coq.Init.Logic <> :type_scope:x_'='_x not
R33909:33912 Basics <> :nat_scope:x_'+'_x not
R33918:33918 Basics <> :nat_scope:x_'+'_x not
R33908:33908 Logic <> x var
R33914:33916 Basics <> :nat_scope:x_'+'_x not
R33913:33913 Logic <> y var
R33917:33917 Logic <> z var
R33922:33922 Basics <> :nat_scope:x_'+'_x not
R33928:33931 Basics <> :nat_scope:x_'+'_x not
R33924:33926 Basics <> :nat_scope:x_'+'_x not
R33923:33923 Logic <> z var
R33927:33927 Logic <> y var
R33932:33932 Logic <> x var
R33968:33976 Induction <> plus_comm thm
R33968:33976 Induction <> plus_comm thm
R33998:34000 Coq.Init.Logic <> :type_scope:x_'='_x not
R33994:33996 Basics <> :nat_scope:x_'+'_x not
R34002:34004 Basics <> :nat_scope:x_'+'_x not
R33998:34000 Coq.Init.Logic <> :type_scope:x_'='_x not
R33994:33996 Basics <> :nat_scope:x_'+'_x not
R34002:34004 Basics <> :nat_scope:x_'+'_x not
R34021:34029 Induction <> plus_comm thm
R34021:34029 Induction <> plus_comm thm
prf 34288:34303 <> plus_comm3_take3
R34334:34336 Coq.Init.Logic <> :type_scope:x_'='_x not
R34324:34327 Basics <> :nat_scope:x_'+'_x not
R34333:34333 Basics <> :nat_scope:x_'+'_x not
R34323:34323 Logic <> x var
R34329:34331 Basics <> :nat_scope:x_'+'_x not
R34328:34328 Logic <> y var
R34332:34332 Logic <> z var
R34337:34337 Basics <> :nat_scope:x_'+'_x not
R34343:34346 Basics <> :nat_scope:x_'+'_x not
R34339:34341 Basics <> :nat_scope:x_'+'_x not
R34338:34338 Logic <> z var
R34342:34342 Logic <> y var
R34347:34347 Logic <> x var
R34383:34391 Induction <> plus_comm thm
R34383:34391 Induction <> plus_comm thm
R34405:34413 Induction <> plus_comm thm
R34405:34413 Induction <> plus_comm thm
def 34894:34913 <> lemma_application_ex
R34931:34933 Coq.Init.Datatypes <> nat ind
R34942:34945 Poly <> list ind
R34947:34949 Coq.Init.Datatypes <> nat ind
R34996:34998 Coq.Init.Logic <> :type_scope:x_'='_x not
R34995:34995 Logic <> n var
R34957:34958 Logic <> In def
R34963:34965 Poly <> map def
R34984:34985 Logic <> ns var
R34978:34980 Basics <> :nat_scope:x_'*'_x not
R34977:34977 Logic <> m var
R34960:34960 Logic <> n var
R35038:35042 Logic <> proj1 thm
R35049:35058 Logic <> In_map_iff thm
R35038:35042 Logic <> proj1 thm
R35049:35058 Logic <> In_map_iff thm
R35110:35117 Induction <> mult_0_r thm
R35110:35117 Induction <> mult_0_r thm
def 37045:37065 <> function_equality_ex1
R37075:37077 Coq.Init.Logic <> :type_scope:x_'='_x not
R37069:37072 Coq.Init.Peano <> plus def
R37078:37081 Coq.Init.Peano <> plus def
R37084:37087 Coq.Init.Peano <> pred def
def 37817:37837 <> function_equality_ex2
R37843:37843 Coq.Init.Logic <> :type_scope:x_'='_x not
R37861:37865 Coq.Init.Logic <> :type_scope:x_'='_x not
R37883:37883 Coq.Init.Logic <> :type_scope:x_'='_x not
R37853:37856 Coq.Init.Peano <> plus def
R37858:37858 Logic <> x var
R37875:37878 Coq.Init.Peano <> plus def
R37882:37882 Logic <> x var
ax 38027:38051 <> functional_extensionality
R38122:38122 Logic <> Y var
R38117:38117 Logic <> X var
R38158:38160 Coq.Init.Logic <> :type_scope:x_'='_x not
R38157:38157 Logic <> f var
R38161:38161 Logic <> g var
R38139:38139 Logic <> X var
R38146:38148 Coq.Init.Logic <> :type_scope:x_'='_x not
R38143:38143 Logic <> f var
R38145:38145 Logic <> x var
R38149:38149 Logic <> g var
R38151:38151 Logic <> x var
def 38452:38472 <> function_equality_ex2
R38478:38478 Coq.Init.Logic <> :type_scope:x_'='_x not
R38496:38500 Coq.Init.Logic <> :type_scope:x_'='_x not
R38518:38518 Coq.Init.Logic <> :type_scope:x_'='_x not
R38488:38491 Coq.Init.Peano <> plus def
R38493:38493 Logic <> x var
R38510:38513 Coq.Init.Peano <> plus def
R38517:38517 Logic <> x var
R38536:38560 Logic <> functional_extensionality prfax
R38536:38560 Logic <> functional_extensionality prfax
R38581:38589 Induction <> plus_comm thm
R38581:38589 Induction <> plus_comm thm
R39246:39266 Logic <> function_equality_ex2 def
def 39810:39819 <> rev_append
R39834:39837 Poly <> list ind
R39839:39839 Logic <> X var
R39844:39847 Poly <> list ind
R39849:39849 Logic <> X var
R39862:39863 Logic <> l1 var
R39874:39875 Poly <> ::'['_']' not
R39880:39881 Logic <> l2 var
R39888:39891 Poly <> ::x_'::'_x not
R39899:39908 Logic <> rev_append def
R39916:39919 Poly <> ::x_'::'_x not
R39920:39921 Logic <> l2 var
def 39943:39948 <> tr_rev
R39959:39962 Poly <> list ind
R39964:39964 Logic <> X var
R39969:39972 Poly <> list ind
R39974:39974 Logic <> X var
R39981:39990 Logic <> rev_append def
R39994:39995 Poly <> ::'['_']' not
R39992:39992 Logic <> l var
prf 40351:40364 <> tr_rev_correct
R40387:40389 Coq.Init.Logic <> :type_scope:x_'='_x not
R40379:40384 Logic <> tr_rev def
R40386:40386 Logic <> X var
R40391:40393 Poly <> rev def
R40395:40395 Logic <> X var
prf 41263:41274 <> evenb_double
R41304:41306 Coq.Init.Logic <> :type_scope:x_'='_x not
R41288:41292 Basics <> evenb def
R41295:41300 Induction <> double def
R41302:41302 Logic <> k var
R41307:41310 Basics <> true constr
prf 41464:41480 <> evenb_double_conv
R41496:41502 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R41504:41505 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R41507:41509 Coq.Init.Logic <> :type_scope:x_'='_x not
R41506:41506 Logic <> n var
R41513:41517 Basics <> evenb def
R41519:41519 Logic <> n var
R41556:41556 Coq.Init.Datatypes <> S constr
R41559:41564 Induction <> double def
R41566:41566 Logic <> k var
R41526:41531 Induction <> double def
R41533:41533 Logic <> k var
R41717:41723 Induction <> evenb_S thm
R41717:41723 Induction <> evenb_S thm
R41750:41754 Basics <> evenb def
R41750:41754 Basics <> evenb def
R41872:41872 Coq.Init.Datatypes <> S constr
R41872:41872 Coq.Init.Datatypes <> S constr
prf 41940:41953 <> even_bool_prop
R41983:41987 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R41976:41978 Coq.Init.Logic <> :type_scope:x_'='_x not
R41969:41973 Basics <> evenb def
R41975:41975 Logic <> n var
R41979:41982 Basics <> true constr
R41988:41994 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R41996:41997 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R41999:42001 Coq.Init.Logic <> :type_scope:x_'='_x not
R41998:41998 Logic <> n var
R42002:42007 Induction <> double def
R42009:42009 Logic <> k var
R42062:42078 Logic <> evenb_double_conv thm
R42062:42078 Logic <> evenb_double_conv thm
R42181:42192 Logic <> evenb_double thm
R42181:42192 Logic <> evenb_double thm
prf 42552:42567 <> beq_nat_true_iff
R42586:42588 Coq.Init.Datatypes <> nat ind
R42613:42617 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R42606:42608 Coq.Init.Logic <> :type_scope:x_'='_x not
R42593:42599 Basics <> beq_nat def
R42604:42605 Logic <> n2 var
R42601:42602 Logic <> n1 var
R42609:42612 Basics <> true constr
R42620:42622 Coq.Init.Logic <> :type_scope:x_'='_x not
R42618:42619 Logic <> n1 var
R42623:42624 Logic <> n2 var
R42667:42678 Tactics <> beq_nat_true prfax
R42667:42678 Tactics <> beq_nat_true prfax
R42717:42728 Induction <> beq_nat_refl thm
R42717:42728 Induction <> beq_nat_refl thm
def 43963:43975 <> is_even_prime
R43988:43990 Coq.Init.Logic <> :type_scope:x_'='_x not
R43987:43987 Logic <> n var
R44010:44014 Basics <> false constr
R43998:44001 Basics <> true constr
def 45546:45554 <> even_1000
R45558:45564 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R45566:45567 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R45572:45574 Coq.Init.Logic <> :type_scope:x_'='_x not
R45575:45580 Induction <> double def
R45582:45582 Logic <> k var
def 45816:45825 <> even_1000'
R45839:45841 Coq.Init.Logic <> :type_scope:x_'='_x not
R45829:45833 Basics <> evenb def
R45842:45845 Basics <> true constr
def 46068:46078 <> even_1000''
R46082:46088 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R46090:46091 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R46096:46098 Coq.Init.Logic <> :type_scope:x_'='_x not
R46099:46104 Induction <> double def
R46106:46106 Logic <> k var
R46122:46135 Logic <> even_bool_prop thm
R46122:46135 Logic <> even_bool_prop thm
prf 46851:46863 <> andb_true_iff
R46880:46883 Basics <> bool ind
R46903:46907 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R46896:46898 Coq.Init.Logic <> :type_scope:x_'='_x not
R46890:46893 Basics <> ::x_'&&'_x not
R46888:46889 Logic <> b1 var
R46894:46895 Logic <> b2 var
R46899:46902 Basics <> true constr
R46917:46920 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R46910:46912 Coq.Init.Logic <> :type_scope:x_'='_x not
R46908:46909 Logic <> b1 var
R46913:46916 Basics <> true constr
R46923:46925 Coq.Init.Logic <> :type_scope:x_'='_x not
R46921:46922 Logic <> b2 var
R46926:46929 Basics <> true constr
prf 46977:46988 <> orb_true_iff
R47023:47027 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R47016:47018 Coq.Init.Logic <> :type_scope:x_'='_x not
R47010:47013 Basics <> ::x_'||'_x not
R47008:47009 Logic <> b1 var
R47014:47015 Logic <> b2 var
R47019:47022 Basics <> true constr
R47037:47040 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R47030:47032 Coq.Init.Logic <> :type_scope:x_'='_x not
R47028:47029 Logic <> b1 var
R47033:47036 Basics <> true constr
R47043:47045 Coq.Init.Logic <> :type_scope:x_'='_x not
R47041:47042 Logic <> b2 var
R47046:47049 Basics <> true constr
prf 47344:47360 <> beq_nat_false_iff
R47377:47379 Coq.Init.Datatypes <> nat ind
R47403:47407 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R47395:47397 Coq.Init.Logic <> :type_scope:x_'='_x not
R47384:47390 Basics <> beq_nat def
R47394:47394 Logic <> y var
R47392:47392 Logic <> x var
R47398:47402 Basics <> false constr
R47409:47412 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R47408:47408 Logic <> x var
R47413:47413 Logic <> y var
def 47857:47864 <> beq_list
R47894:47897 Basics <> bool ind
R47889:47889 Logic <> A var
R47884:47884 Logic <> A var
R47927:47930 Poly <> list ind
R47932:47932 Logic <> A var
R47937:47940 Basics <> bool ind
prf 48016:48032 <> beq_list_true_iff
R48064:48067 Basics <> bool ind
R48059:48059 Logic <> A var
R48054:48054 Logic <> A var
R48166:48170 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R48159:48161 Coq.Init.Logic <> :type_scope:x_'='_x not
R48141:48148 Logic <> beq_list prfax
R48157:48158 Logic <> l2 var
R48154:48155 Logic <> l1 var
R48150:48152 Logic <> beq var
R48162:48165 Basics <> true constr
R48173:48175 Coq.Init.Logic <> :type_scope:x_'='_x not
R48171:48172 Logic <> l1 var
R48176:48177 Logic <> l2 var
R48106:48110 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R48099:48101 Coq.Init.Logic <> :type_scope:x_'='_x not
R48090:48092 Logic <> beq var
R48097:48098 Logic <> a2 var
R48094:48095 Logic <> a1 var
R48102:48105 Basics <> true constr
R48113:48115 Coq.Init.Logic <> :type_scope:x_'='_x not
R48111:48112 Logic <> a1 var
R48116:48117 Logic <> a2 var
def 48403:48409 <> forallb
R48435:48438 Basics <> bool ind
R48430:48430 Logic <> X var
R48446:48449 Poly <> list ind
R48451:48451 Logic <> X var
R48456:48459 Basics <> bool ind
R48472:48472 Logic <> l var
R48483:48484 Poly <> ::'['_']' not
R48489:48492 Basics <> true constr
R48499:48502 Poly <> ::x_'::'_x not
R48509:48512 Basics <> andb def
R48524:48530 Logic <> forallb def
R48532:48535 Logic <> test var
R48515:48518 Logic <> test var
prf 48663:48678 <> forallb_true_iff
R48701:48704 Poly <> list ind
R48706:48706 Logic <> X var
R48734:48738 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R48727:48729 Coq.Init.Logic <> :type_scope:x_'='_x not
R48713:48719 Logic <> forallb def
R48726:48726 Logic <> l var
R48721:48724 Logic <> test var
R48730:48733 Basics <> true constr
R48739:48741 Logic <> All def
R48768:48768 Logic <> l var
R48759:48761 Coq.Init.Logic <> :type_scope:x_'='_x not
R48753:48756 Logic <> test var
R48758:48758 Logic <> x var
R48762:48765 Basics <> true constr
def 49389:49403 <> excluded_middle
R49428:49431 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R49427:49427 Logic <> P var
R49432:49433 Coq.Init.Logic <> :type_scope:'~'_x not
R49434:49434 Logic <> P var
prf 50194:50219 <> restricted_excluded_middle
R50258:50261 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R50257:50257 Logic <> P var
R50262:50263 Coq.Init.Logic <> :type_scope:'~'_x not
R50264:50264 Logic <> P var
R50239:50243 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R50238:50238 Logic <> P var
R50245:50247 Coq.Init.Logic <> :type_scope:x_'='_x not
R50244:50244 Logic <> b var
R50248:50251 Basics <> true constr
prf 50510:50538 <> restricted_excluded_middle_eq
R50556:50558 Coq.Init.Datatypes <> nat ind
R50569:50572 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R50565:50567 Coq.Init.Logic <> :type_scope:x_'='_x not
R50564:50564 Logic <> n var
R50568:50568 Logic <> m var
R50574:50577 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R50573:50573 Logic <> n var
R50578:50578 Logic <> m var
R50611:50636 Logic <> restricted_excluded_middle thm
R50647:50653 Basics <> beq_nat def
R50640:50642 Coq.Init.Logic <> :type_scope:x_'='_x not
R50611:50636 Logic <> restricted_excluded_middle thm
R50647:50653 Basics <> beq_nat def
R50640:50642 Coq.Init.Logic <> :type_scope:x_'='_x not
R50682:50697 Logic <> beq_nat_true_iff thm
R50682:50697 Logic <> beq_nat_true_iff thm
prf 54901:54927 <> excluded_middle_irrefutable
R54949:54950 Coq.Init.Logic <> :type_scope:'~'_x not
R54951:54953 Coq.Init.Logic <> :type_scope:'~'_x not
R54962:54962 Coq.Init.Logic <> :type_scope:'~'_x not
R54955:54958 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R54954:54954 Logic <> P var
R54959:54960 Coq.Init.Logic <> :type_scope:'~'_x not
R54961:54961 Logic <> P var
prf 55449:55463 <> not_exists_dist
R55511:55511 Logic <> X var
R55561:55561 Logic <> P var
R55563:55563 Logic <> x var
R55527:55529 Coq.Init.Logic <> :type_scope:'~'_x not
R55545:55545 Coq.Init.Logic <> :type_scope:'~'_x not
R55530:55536 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R55538:55539 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R55540:55541 Coq.Init.Logic <> :type_scope:'~'_x not
R55542:55542 Logic <> P var
R55544:55544 Logic <> x var
R55469:55483 Logic <> excluded_middle def
def 56179:56184 <> peirce
R56222:56222 Logic <> P var
R56218:56218 Logic <> P var
R56214:56214 Logic <> Q var
R56211:56211 Logic <> P var
def 56237:56263 <> double_negation_elimination
R56292:56292 Logic <> P var
R56285:56285 Coq.Init.Logic <> :type_scope:'~'_x not
R56286:56286 Coq.Init.Logic <> :type_scope:'~'_x not
R56287:56287 Logic <> P var
def 56307:56327 <> de_morgan_not_and_not
R56367:56368 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R56366:56366 Logic <> P var
R56369:56369 Logic <> Q var
R56351:56352 Coq.Init.Logic <> :type_scope:'~'_x not
R56361:56361 Coq.Init.Logic <> :type_scope:'~'_x not
R56355:56358 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R56353:56353 Coq.Init.Logic <> :type_scope:'~'_x not
R56354:56354 Logic <> P var
R56359:56359 Coq.Init.Logic <> :type_scope:'~'_x not
R56360:56360 Logic <> Q var
def 56384:56396 <> implies_to_or
R56433:56434 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R56431:56431 Coq.Init.Logic <> :type_scope:'~'_x not
R56432:56432 Logic <> P var
R56435:56435 Logic <> Q var
R56424:56424 Logic <> Q var
R56421:56421 Logic <> P var
